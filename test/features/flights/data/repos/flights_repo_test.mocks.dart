// Mocks generated by Mockito 5.4.5 from annotations
// in flight_booking/test/features/flights/data/repos/flights_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flight_booking/src/core/network/connection_info.dart' as _i5;
import 'package:flight_booking/src/features/flights/data/data_source/remote/flights_api_service.dart'
    as _i3;
import 'package:flight_booking/src/features/flights/data/models/flights_response_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFlightsResponseModel_0 extends _i1.SmartFake
    implements _i2.FlightsResponseModel {
  _FakeFlightsResponseModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [FlightsApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlightsApiService extends _i1.Mock implements _i3.FlightsApiService {
  @override
  _i4.Future<_i2.FlightsResponseModel> getFlights({
    Map<String, dynamic>? searchQueries,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getFlights, [], {#searchQueries: searchQueries}),
            returnValue: _i4.Future<_i2.FlightsResponseModel>.value(
              _FakeFlightsResponseModel_0(
                this,
                Invocation.method(#getFlights, [], {
                  #searchQueries: searchQueries,
                }),
              ),
            ),
            returnValueForMissingStub:
                _i4.Future<_i2.FlightsResponseModel>.value(
                  _FakeFlightsResponseModel_0(
                    this,
                    Invocation.method(#getFlights, [], {
                      #searchQueries: searchQueries,
                    }),
                  ),
                ),
          )
          as _i4.Future<_i2.FlightsResponseModel>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i5.NetworkInfo {
  @override
  _i4.Future<bool> get isConnected =>
      (super.noSuchMethod(
            Invocation.getter(#isConnected),
            returnValue: _i4.Future<bool>.value(false),
            returnValueForMissingStub: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);
}
